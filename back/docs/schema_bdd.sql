DROP TABLE IF EXISTS "Message" CASCADE;
DROP TABLE IF EXISTS "Conversation" CASCADE;
DROP TABLE IF EXISTS "Payment" CASCADE;
DROP TABLE IF EXISTS "Rental" CASCADE;
DROP TABLE IF EXISTS "Vehicle" CASCADE;
DROP TABLE IF EXISTS "Agency" CASCADE;
DROP TABLE IF EXISTS "User" CASCADE;

DROP TYPE IF EXISTS conversation_status CASCADE;
DROP TYPE IF EXISTS payment_status CASCADE;
DROP TYPE IF EXISTS rental_status CASCADE;
DROP TYPE IF EXISTS currency CASCADE;
DROP TYPE IF EXISTS user_role CASCADE;
DROP TYPE IF EXISTS vehicle_status CASCADE;


CREATE TYPE vehicle_status AS ENUM ('AVAILABLE','UNAVAILABLE','MAINTENANCE','BOOKED');
CREATE TYPE user_role       AS ENUM ('CLIENT','ADMIN','EMPLOYEE');
CREATE TYPE currency        AS ENUM ('EUR','USD','GBP');
CREATE TYPE rental_status   AS ENUM ('PENDING','CONFIRMED','IN_PROGRESS','COMPLETED','CANCELLED','OVERDUE','REFUNDED');
CREATE TYPE payment_status  AS ENUM ('PENDING','SUCCEEDED','FAILED','REFUNDED');
CREATE TYPE conversation_status AS ENUM ('OPEN','CLOSED');

CREATE TABLE "User" (
                        user_id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        email          VARCHAR(255) NOT NULL UNIQUE,
                        password       VARCHAR(255) NOT NULL,
                        first_name     VARCHAR(100),
                        last_name      VARCHAR(100),
                        phone          VARCHAR(20),
                        birth_date     DATE,
                        country        VARCHAR(100),
                        city           VARCHAR(100),
                        postal_code    VARCHAR(20),
                        adresse        VARCHAR(255),
                        role           user_role NOT NULL DEFAULT 'CLIENT',
                        created_at     TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                        updated_at     TIMESTAMPTZ,
                        is_active      BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE "Agency" (
                          agency_id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          name           VARCHAR(150) NOT NULL,
                          phone          VARCHAR(20),
                          email          VARCHAR(255),
                          country        VARCHAR(100),
                          city           VARCHAR(100),
                          postal_code    VARCHAR(20),
                          adresse        VARCHAR(255),
                          is_active      BOOLEAN NOT NULL DEFAULT TRUE,
                          created_at     TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                          updated_at     TIMESTAMPTZ
);

CREATE TABLE "Vehicle" (
                           vehicle_id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           category           VARCHAR(50) NOT NULL,
                           acriss_code        VARCHAR(10),
                           seats              INT CHECK (seats >= 1),
                           brand              VARCHAR(150),
                           model              VARCHAR(255),
                           color              VARCHAR(50),
                           status             vehicle_status NOT NULL DEFAULT 'AVAILABLE',
                           owner_agency_id    BIGINT NOT NULL,
                           current_agency_id  BIGINT NULL,
                           license_plate      VARCHAR(30) NOT NULL UNIQUE,
                           description        TEXT,
                           image_url          TEXT,
                           is_active          BOOLEAN NOT NULL DEFAULT TRUE,
                           created_at         TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                           updated_at         TIMESTAMPTZ,
                           CONSTRAINT fk_vehicle_owner_agency
                               FOREIGN KEY (owner_agency_id) REFERENCES "Agency"(agency_id) ON UPDATE CASCADE ON DELETE RESTRICT,
                           CONSTRAINT fk_vehicle_current_agency
                               FOREIGN KEY (current_agency_id) REFERENCES "Agency"(agency_id) ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE INDEX idx_vehicle_status ON "Vehicle"(status);
CREATE INDEX idx_vehicle_current_agency ON "Vehicle"(current_agency_id);


CREATE TABLE "Rental" (
                          rental_id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          pickup_agency_id BIGINT NOT NULL,
                          return_agency_id BIGINT NOT NULL,
                          user_id          BIGINT NOT NULL,
                          vehicle_id       BIGINT NOT NULL,
                          start_at         TIMESTAMPTZ NOT NULL,
                          end_at           TIMESTAMPTZ NOT NULL,
                          status           rental_status NOT NULL DEFAULT 'PENDING',
                          amount           NUMERIC(12,2) NOT NULL CHECK (amount >= 0),
                          currency         currency NOT NULL,
                          created_at       TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                          updated_at       TIMESTAMPTZ,
                          CONSTRAINT chk_rental_dates CHECK (end_at > start_at),
                          CONSTRAINT fk_rental_pickup_agency  FOREIGN KEY (pickup_agency_id) REFERENCES "Agency"(agency_id) ON UPDATE CASCADE ON DELETE RESTRICT,
                          CONSTRAINT fk_rental_return_agency  FOREIGN KEY (return_agency_id) REFERENCES "Agency"(agency_id) ON UPDATE CASCADE ON DELETE RESTRICT,
                          CONSTRAINT fk_rental_user           FOREIGN KEY (user_id) REFERENCES "User"(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
                          CONSTRAINT fk_rental_vehicle        FOREIGN KEY (vehicle_id) REFERENCES "Vehicle"(vehicle_id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE INDEX idx_rental_user ON "Rental"(user_id);
CREATE INDEX idx_rental_vehicle ON "Rental"(vehicle_id);
CREATE INDEX idx_rental_status ON "Rental"(status);
CREATE INDEX idx_rental_pickup_return ON "Rental"(pickup_agency_id, return_agency_id);

CREATE TABLE "Payment" (
                           payment_id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           rental_id           BIGINT NOT NULL,
                           amount              NUMERIC(12,2) NOT NULL CHECK (amount >= 0),
                           currency            currency NOT NULL,
                           status              payment_status NOT NULL DEFAULT 'PENDING',
                           method              VARCHAR(50) NOT NULL,
                           provider_payment_id VARCHAR(255),
                           created_at          TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                           updated_at          TIMESTAMPTZ,
                           CONSTRAINT fk_payment_rental FOREIGN KEY (rental_id) REFERENCES "Rental"(rental_id) ON UPDATE CASCADE ON DELETE RESTRICT,
                           CONSTRAINT uq_payment_provider_id UNIQUE (provider_payment_id)
);

CREATE INDEX idx_payment_rental ON "Payment"(rental_id);
CREATE INDEX idx_payment_status ON "Payment"(status);

CREATE TABLE "Conversation" (
                                conversation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                client_id       BIGINT NOT NULL,
                                agent_id        BIGINT NULL,
                                status          conversation_status NOT NULL DEFAULT 'OPEN',
                                created_at      TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                                updated_at      TIMESTAMPTZ,
                                CONSTRAINT fk_conversation_client FOREIGN KEY (client_id) REFERENCES "User"(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
                                CONSTRAINT fk_conversation_agent  FOREIGN KEY (agent_id)  REFERENCES "User"(user_id) ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE INDEX idx_conversation_status ON "Conversation"(status);
CREATE INDEX idx_conversation_client ON "Conversation"(client_id);
CREATE INDEX idx_conversation_agent  ON "Conversation"(agent_id);

CREATE TABLE "Message" (
                           message_id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           conversation_id BIGINT NOT NULL,
                           sender_id       BIGINT NOT NULL,
                           content         TEXT NOT NULL,
                           sent_at         TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                           is_read         BOOLEAN NOT NULL DEFAULT FALSE,
                           CONSTRAINT fk_message_conversation FOREIGN KEY (conversation_id) REFERENCES "Conversation"(conversation_id) ON UPDATE CASCADE ON DELETE CASCADE,
                           CONSTRAINT fk_message_sender       FOREIGN KEY (sender_id)      REFERENCES "User"(user_id)       ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE INDEX idx_message_conversation ON "Message"(conversation_id, sent_at);
CREATE INDEX idx_message_sender       ON "Message"(sender_id);

